version: "0.2"
phases:
  pre_build:
    on-failure: ABORT
    commands:
      - echo Starting pre-build fase
      - echo Authenticating on ECR Repository
      - aws ecr get-login-password --region $REGION | docker login --username $ECR_USER --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
      - echo Moving to build stage
  build:
    on-failure: ABORT
    commands:
      - echo Starting build fase
      - echo Generating env file...
      - aws ssm get-parameters --name /$BOXSET/$APPSET/whatsapp/credentials --with-decryption --region $REGION | jq .Parameters | jq .[].Value | tr -d '"' | sed 's/\\n/\n/g' > .env
      - docker build . --build-arg BOXSET_ARG=$BOXSET --build-arg APPSET_ARG=$APPSET --build-arg REGION_ARG=$REGION --build-arg SERVICE_ARG=$SERVICE -t $IMAGE_REPO_NAME
      - echo "Build completed on $(date)"
      - echo Moving to post build stage
  post_build:
    on-failure: ABORT
    commands:
      - echo "Tagging container image to AWS default"
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - printf '[{"name":"WebContainer","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME':latest > imagedefinitions.json
      - echo imagedefinitions.json created on `pwd`
      - cat imagedefinitions.json
      - echo "Post build fase completed"

artifacts:
  files:
    - imagedefinitions.json
